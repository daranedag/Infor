/*
 * Fehlstamm.java
 *
 * Created on 23. Mai 2006, 14:01
 */

package vis2006;
import DatabaseManagement.*;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author  nagel
 */
public class Fehlstamm extends javax.swing.JDialog {
    String ids="";
    DBConnection dbcon=null;
    Integer auf2 =1;
    Integer auf1 =1;
    boolean aufTypU;
    int count =0;        // Anzahl
    double sx=0.0;      //Summe d1
    double sxx = 0.0;   // Summe(d1^2)
    double sy=0.0;      //Summe d2 
    double syy=0.0;     // Summe(d2^2)
    double sxy=0.0;    // Summe(d1*d2)
    double a0=0.0;     // Regressionsgerade: Interzept
    double b1=0.0;     // Regressionsgerade: Steigung
        /** Creates new form Fehlstamm */
    public Fehlstamm(java.awt.Frame parent, boolean modal, String id,DBConnection dbconn, int fehlAuf, int vorAuf) {
        super(parent, modal);
        initComponents();
        ids=id;
        dbcon=dbconn;
        auf2=fehlAuf;
        //aufTypU = fehlAufTypU;
        jTextField2.setText(auf2.toString());
        auf1=vorAuf;
        jTextField1.setText(auf1.toString());
        jTextField1.setEditable(false);     // da Änderungen sowieso nicht berücksichtigt werden
        jTextField2.setEditable(false);
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cálculo de cepas defectuosas");
        jButton1.setText("Iniciar cálculo de cepas defectuosas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1, java.awt.BorderLayout.SOUTH);

        jPanel1.setLayout(new java.awt.GridLayout(2, 2));

        jLabel1.setText("Medida 1");
        jPanel1.add(jLabel1);

        jTextField1.setText("1");
        jPanel1.add(jTextField1);

        jLabel2.setText("Medida 2");
        jPanel1.add(jLabel2);

        jTextField2.setText("1");
        jPanel1.add(jTextField2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int nFehl = 0;
        String nrFehl[] = new String[1000];
        double d1Fehl[] = new double[1000];
        int artx = 0;
        double d1 = 0;
        double d2 = 0;
        String nr1 = "";
        String nr2 = "";
        boolean fehlArtGefunden = false;

        try {
            Statement stmt = dbcon.Connections[0].createStatement();
            ResultSet rs = null;
            /*
            if(aufTypU) rs = stmt.executeQuery("SELECT art FROM Baum WHERE edvid = '" + ids + "' AND d < 1 AND ddauer < 1 "
                    + "AND auf = " + auf2 + " AND r <> 'R'" +  // hier muss das P noch rein
                    "GROUP BY art");
            else */
            rs = stmt.executeQuery("SELECT art FROM Baum WHERE edvid = '" + ids + "' AND dmess =-999 AND auf = " + auf2 + " " +
                    "GROUP BY art");
            while (rs.next()) {
                fehlArtGefunden = true;
                setRegressionZero();
                artx = rs.getInt("art");
                // Zuerst die Regression berechen 
                try {
                    Statement stmt2 = dbcon.Connections[0].createStatement();
                    String sql = "";
                    /*if(aufTypU) sql = "SELECT * FROM Baum WHERE edvid= '" + ids + "' " +
                            "AND (d > 0 OR (ddauer < 1 AND d < 1)) AND (auf = " + auf2 + " OR auf = " + auf1 + ") " +
                            "AND art = " + artx + " AND r <> 'R' ORDER by nr, auf "; // hier muss das P noch rein
                    else */
                    sql = "SELECT * FROM Baum WHERE edvid= '" + ids + "' " +
                            "AND (d > 0 OR dmess = -999 )  AND (auf = " + auf2 + " OR auf = " + auf1 + ") " +
                            "AND art = " + artx + " ORDER by nr, auf ";
                    //System.out.print(sql);
                    ResultSet rs2 = stmt2.executeQuery(sql);
                    boolean beenden = false;
                    while (rs2.next() && ! beenden) {
                        boolean fehlbaum = false;
                        int dx = rs2.getInt("d");
                        /*if(aufTypU){
                            int ddauerx = rs2.getInt("ddauer");
                            if(dx < 1 && ddauerx < 1) fehlbaum = true;
                        } else{
                         */
                            int dmessx = rs2.getInt("dmess");
                            if(dmessx == -999) fehlbaum = true;
                        //}
                        int aufx = rs2.getInt("auf");
                        String nrx = rs2.getObject("nr").toString().trim();
                        if (nrx.compareTo("nurH") != 0 && nrx.compareTo("cm") != 0) {
                            if(aufx == auf1 && fehlbaum && dx < 1){
                                beenden = true;
                                String text = "Ningún cálculo de cepas defectuosas para árbol número "+nrx+". Sin diámetro en el pre-grabado.";
                                javax.swing.JOptionPane.showMessageDialog (this, text, "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            
                            else if(aufx == auf1) {
                                d1 = dx / 10.0;
                                nr1 = nrx;
                                d2 = 0.0;
                                nr2 = "";
                            }
                            else if(aufx == auf2) {
                                d2 = dx / 10.0;
                                nr2 = nrx;
                                if (nr1.equals(nr2) && d2 > 0 && !fehlbaum) {
                                    sx = sx + d1;
                                    sxx = sxx + d1 * d1;
                                    sy = sy + d2;
                                    syy = syy + d2 * d2;
                                    sxy = sxy + d1 * d2;
                                    count = count + 1;
                                }
                                if (nr1.equals(nr2) && d2 <= 0 && fehlbaum) {
                                    nrFehl[nFehl] = nrx;
                                    d1Fehl[nFehl] = d1;
                                    nFehl = nFehl + 1;
                                }
                                nr1 = "-99";
                            }
                        }
                    }
                    a0 = getRegressionA0();  // Lineare Regression: Zuwachs <- d1
                    b1 = getRegressionB1();
                    rs2.close(); stmt2.close();
                    System.out.println(nFehl + " Cepas de fallo (Art: " + artx + ") encontradas, " + count + " Árboles de referencia");

                } catch (Exception e) {System.out.println("Cálculo de cepas defectuosas 2 :" + e);}
//
                try {
                    Statement stmt3 = dbcon.Connections[0].createStatement();
                    for (int i = 0; i < nFehl; i++) {
                        int dy = (int) Math.round(10 * (a0 + b1 * d1Fehl[i]));
                        if (dy < d1Fehl[i]*10) dy=(int)(d1Fehl[i]*10);   // Negativen Zuwachs ausschließen
                        System.out.println("Árbol " + nrFehl[i] + "  ultimo d: " + (int) (d1Fehl[i] * 10) + "  nuevo d: " + dy);
                        /*if(aufTypU) stmt3.execute("UPDATE Baum SET d = " + dy +  " " +
                                " WHERE art= " + artx + " and TRIM(nr) = '" + nrFehl[i] + "' AND auf = " + auf2 +
                                "  AND edvid= '" + ids + "' ");
                        else */
                         stmt3.execute("UPDATE Baum SET d = " + dy + ",dkrz1=0, dkrz2=0 " +
                                " WHERE art= " + artx + " and TRIM(nr) = '" + nrFehl[i] + "' AND auf = " + auf2 +
                                "  AND edvid= '" + ids + "' ");
                    }
                    stmt3.close();
                } catch (Exception e) {System.out.println("Cálculo de cepas defectuosas 3 (Actualizar) :" + e);}
                nrFehl = new String[1000];
                d1Fehl = new double[1000]; 
                nFehl = 0;
                        
            }
            if(!fehlArtGefunden){
                String text = "Ninguna cepa defectuosa encontrada!";
                javax.swing.JOptionPane.showMessageDialog (this, text, "Fehler", JOptionPane.ERROR_MESSAGE);
            }
            rs.close();
            stmt.close();
        } catch (Exception e) { System.out.println("Cálculo de cepas defectuosas 1 (Buscar cepas defectuosas) :" + e);}
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed
    
    void setRegressionZero(){
      sx=0.0;
      sxx=0.0;
      sy=0.0;
      syy=0.0;
      sxy=0.0;
      count=0;
      a0=0.0;
      b1=0.0;
    };
    double getRegressionA0(){
        // 
        return (sxx*sy - sx*sxy)/(sxx*count - sx*sx);  
    }
    double getRegressionB1(){
        return (count * sxy - sx*sy)/(sxx*count - sx*sx);
    }
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    
}
